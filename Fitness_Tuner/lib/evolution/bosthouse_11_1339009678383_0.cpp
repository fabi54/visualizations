#include <cstdlib>
#include <stdio.h>
#include <math.h>
#include <cmath>
#include <iostream>
#include <iomanip>
using namespace std;

#include "./regression/SigmoidModel.h"

double SigmoidModel_2989763520909(const double input[12]) {
static const double parameters[15] = {-2.620273559464135,-0.5033771101988825,-0.31667676056997596,0.37914098163721893,-0.3141526850478473,-1.5125376235658412,1.1702494650112094,0.14713751314995077,0.5356014442263115,-0.6485180949770812,-0.33716774708654385,-0.08533569929311939,-1.2958503353441726,3.3292394075256375,0.03154533764602446};
return sigmoidModelOutput<12>(input,parameters);
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989763719049(const double input[12]) {
static const double parameters[15] = {-0.6602803586119174,-0.14455955849398594,-0.26419211872741616,0.44594405111328334,0.5151578891131623,-0.26648056258802977,0.6066352905148145,0.026592673232938475,0.3811240013893356,-0.03848726810205407,0.1127944593600298,-0.2032563585777093,-0.1243025841902448,1.0551048801827563,-0.28099477482054697};
return sigmoidModelOutput<12>(input,parameters);
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989763828001(const double input[12]) {
static const double parameters[15] = {3.0163551008901583,0.07687836759328248,0.24746848363384455,-0.4149659086577356,0.4123862853818793,1.5764827204092904,-0.9994212721379524,0.313058874476251,-0.41396894330452894,0.37920521720714884,0.22998986726083492,0.026728264200020453,0.7123517307808849,-2.0247177065870416,2.081686309403168};
return sigmoidModelOutput<12>(input,parameters);
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989763928014(const double input[12]) {
static const double parameters[15] = {-3.0809804482312964,-0.21457467528090082,0.00663339840483198,0.6342563586504183,-0.2747883225800932,-1.7033223580535768,1.1624249287926611,0.030817050312545367,0.49770641730853704,-0.7987378214751294,-0.20358994725888185,-0.0329591315558462,-0.5135800318182322,1.7395416968180772,0.03086892662543906};
return sigmoidModelOutput<12>(input,parameters);
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989764091163(const double input[12]) {
static const double parameters[15] = {-3.3335910563742064,-0.8498359455716445,-0.33675669040513956,0.27857050568502734,-0.21577141231984445,-1.686405823901347,0.7133719834565175,-0.3311563847377172,0.6870927011408482,-0.8229243621531961,-0.32652892210344825,-0.04918324981978532,-0.3098411226897259,2.659816364747255,0.03671158509669328};
return sigmoidModelOutput<12>(input,parameters);
}
#include "NeuralNet.h"

double RapidNeuralNetModel_2989764243348(const double input[12]) {
return 0.4897902869757174*(-2.32945375314101*sigmoidNeural(-1.239477665344716*sigmoidNeural(-4.428241249638536*(input[0]-0.5)/0.5+-0.8409506947682235*(input[1]-0.5)/0.5+2.5843341322607785*(input[2]-0.5)/0.5+-0.03194233320027947*(input[3]-0.5051319648093842)/0.49486803519061584+-0.5393085873982303*(input[4]-0.507201646090535)/0.49279835390946497+-0.16521070293590004*(input[5]-0.555278789040046)/0.444721210959954+2.7819594941036305*(input[6]-0.5)/0.5+-0.2897595025880176*(input[7]-0.5003364584564741)/0.4996635415435259+1.200501068302911*(input[8]-0.5)/0.5+-0.2015341145955507*(input[9]-0.5)/0.5+0.17786775763512422*(input[10]-0.5)/0.5+-0.8929110174564202*(input[11]-0.5)/0.5+-4.652446899272843)+-0.44648081138760753*sigmoidNeural(-3.4037138889612137*(input[0]-0.5)/0.5+1.5308475420400214*(input[1]-0.5)/0.5+-0.11187785260911834*(input[2]-0.5)/0.5+0.024511739723807574*(input[3]-0.5051319648093842)/0.49486803519061584+-0.6276122664150787*(input[4]-0.507201646090535)/0.49279835390946497+-2.2633991463121093*(input[5]-0.555278789040046)/0.444721210959954+0.11936623423407026*(input[6]-0.5)/0.5+-2.5588532367831016*(input[7]-0.5003364584564741)/0.4996635415435259+0.14165120373421733*(input[8]-0.5)/0.5+0.034548887965294414*(input[9]-0.5)/0.5+0.12198899171552587*(input[10]-0.5)/0.5+1.274276101295478*(input[11]-0.5)/0.5+-2.3386152475773985)+-2.9431181357330654*sigmoidNeural(-2.552987561844167*(input[0]-0.5)/0.5+2.183762165693438*(input[1]-0.5)/0.5+0.03801086327665823*(input[2]-0.5)/0.5+1.0670825448928203*(input[3]-0.5051319648093842)/0.49486803519061584+0.5080624454691928*(input[4]-0.507201646090535)/0.49279835390946497+-7.357135602768646*(input[5]-0.555278789040046)/0.444721210959954+1.2919543193979224*(input[6]-0.5)/0.5+1.8181938321273996*(input[7]-0.5003364584564741)/0.4996635415435259+-0.6798668259026017*(input[8]-0.5)/0.5+-0.7323646166907146*(input[9]-0.5)/0.5+-0.786354600317353*(input[10]-0.5)/0.5+2.3495478042806743*(input[11]-0.5)/0.5+-6.510363977363434)+-1.7613839509311862)+-2.3327665688141437*sigmoidNeural(-1.2389372588036944*sigmoidNeural(-4.428241249638536*(input[0]-0.5)/0.5+-0.8409506947682235*(input[1]-0.5)/0.5+2.5843341322607785*(input[2]-0.5)/0.5+-0.03194233320027947*(input[3]-0.5051319648093842)/0.49486803519061584+-0.5393085873982303*(input[4]-0.507201646090535)/0.49279835390946497+-0.16521070293590004*(input[5]-0.555278789040046)/0.444721210959954+2.7819594941036305*(input[6]-0.5)/0.5+-0.2897595025880176*(input[7]-0.5003364584564741)/0.4996635415435259+1.200501068302911*(input[8]-0.5)/0.5+-0.2015341145955507*(input[9]-0.5)/0.5+0.17786775763512422*(input[10]-0.5)/0.5+-0.8929110174564202*(input[11]-0.5)/0.5+-4.652446899272843)+-0.48466826933420826*sigmoidNeural(-3.4037138889612137*(input[0]-0.5)/0.5+1.5308475420400214*(input[1]-0.5)/0.5+-0.11187785260911834*(input[2]-0.5)/0.5+0.024511739723807574*(input[3]-0.5051319648093842)/0.49486803519061584+-0.6276122664150787*(input[4]-0.507201646090535)/0.49279835390946497+-2.2633991463121093*(input[5]-0.555278789040046)/0.444721210959954+0.11936623423407026*(input[6]-0.5)/0.5+-2.5588532367831016*(input[7]-0.5003364584564741)/0.4996635415435259+0.14165120373421733*(input[8]-0.5)/0.5+0.034548887965294414*(input[9]-0.5)/0.5+0.12198899171552587*(input[10]-0.5)/0.5+1.274276101295478*(input[11]-0.5)/0.5+-2.3386152475773985)+-2.9203867585634256*sigmoidNeural(-2.552987561844167*(input[0]-0.5)/0.5+2.183762165693438*(input[1]-0.5)/0.5+0.03801086327665823*(input[2]-0.5)/0.5+1.0670825448928203*(input[3]-0.5051319648093842)/0.49486803519061584+0.5080624454691928*(input[4]-0.507201646090535)/0.49279835390946497+-7.357135602768646*(input[5]-0.555278789040046)/0.444721210959954+1.2919543193979224*(input[6]-0.5)/0.5+1.8181938321273996*(input[7]-0.5003364584564741)/0.4996635415435259+-0.6798668259026017*(input[8]-0.5)/0.5+-0.7323646166907146*(input[9]-0.5)/0.5+-0.786354600317353*(input[10]-0.5)/0.5+2.3495478042806743*(input[11]-0.5)/0.5+-6.510363977363434)+-1.7450406862351358)+-2.337602950477386*sigmoidNeural(-1.1837112454015049*sigmoidNeural(-4.428241249638536*(input[0]-0.5)/0.5+-0.8409506947682235*(input[1]-0.5)/0.5+2.5843341322607785*(input[2]-0.5)/0.5+-0.03194233320027947*(input[3]-0.5051319648093842)/0.49486803519061584+-0.5393085873982303*(input[4]-0.507201646090535)/0.49279835390946497+-0.16521070293590004*(input[5]-0.555278789040046)/0.444721210959954+2.7819594941036305*(input[6]-0.5)/0.5+-0.2897595025880176*(input[7]-0.5003364584564741)/0.4996635415435259+1.200501068302911*(input[8]-0.5)/0.5+-0.2015341145955507*(input[9]-0.5)/0.5+0.17786775763512422*(input[10]-0.5)/0.5+-0.8929110174564202*(input[11]-0.5)/0.5+-4.652446899272843)+-0.5456889463338465*sigmoidNeural(-3.4037138889612137*(input[0]-0.5)/0.5+1.5308475420400214*(input[1]-0.5)/0.5+-0.11187785260911834*(input[2]-0.5)/0.5+0.024511739723807574*(input[3]-0.5051319648093842)/0.49486803519061584+-0.6276122664150787*(input[4]-0.507201646090535)/0.49279835390946497+-2.2633991463121093*(input[5]-0.555278789040046)/0.444721210959954+0.11936623423407026*(input[6]-0.5)/0.5+-2.5588532367831016*(input[7]-0.5003364584564741)/0.4996635415435259+0.14165120373421733*(input[8]-0.5)/0.5+0.034548887965294414*(input[9]-0.5)/0.5+0.12198899171552587*(input[10]-0.5)/0.5+1.274276101295478*(input[11]-0.5)/0.5+-2.3386152475773985)+-2.9325042402210832*sigmoidNeural(-2.552987561844167*(input[0]-0.5)/0.5+2.183762165693438*(input[1]-0.5)/0.5+0.03801086327665823*(input[2]-0.5)/0.5+1.0670825448928203*(input[3]-0.5051319648093842)/0.49486803519061584+0.5080624454691928*(input[4]-0.507201646090535)/0.49279835390946497+-7.357135602768646*(input[5]-0.555278789040046)/0.444721210959954+1.2919543193979224*(input[6]-0.5)/0.5+1.8181938321273996*(input[7]-0.5003364584564741)/0.4996635415435259+-0.6798668259026017*(input[8]-0.5)/0.5+-0.7323646166907146*(input[9]-0.5)/0.5+-0.786354600317353*(input[10]-0.5)/0.5+2.3495478042806743*(input[11]-0.5)/0.5+-6.510363977363434)+-1.7245727780956905)+-2.3220181149225*sigmoidNeural(-1.2542428709660203*sigmoidNeural(-4.428241249638536*(input[0]-0.5)/0.5+-0.8409506947682235*(input[1]-0.5)/0.5+2.5843341322607785*(input[2]-0.5)/0.5+-0.03194233320027947*(input[3]-0.5051319648093842)/0.49486803519061584+-0.5393085873982303*(input[4]-0.507201646090535)/0.49279835390946497+-0.16521070293590004*(input[5]-0.555278789040046)/0.444721210959954+2.7819594941036305*(input[6]-0.5)/0.5+-0.2897595025880176*(input[7]-0.5003364584564741)/0.4996635415435259+1.200501068302911*(input[8]-0.5)/0.5+-0.2015341145955507*(input[9]-0.5)/0.5+0.17786775763512422*(input[10]-0.5)/0.5+-0.8929110174564202*(input[11]-0.5)/0.5+-4.652446899272843)+-0.3971160779607448*sigmoidNeural(-3.4037138889612137*(input[0]-0.5)/0.5+1.5308475420400214*(input[1]-0.5)/0.5+-0.11187785260911834*(input[2]-0.5)/0.5+0.024511739723807574*(input[3]-0.5051319648093842)/0.49486803519061584+-0.6276122664150787*(input[4]-0.507201646090535)/0.49279835390946497+-2.2633991463121093*(input[5]-0.555278789040046)/0.444721210959954+0.11936623423407026*(input[6]-0.5)/0.5+-2.5588532367831016*(input[7]-0.5003364584564741)/0.4996635415435259+0.14165120373421733*(input[8]-0.5)/0.5+0.034548887965294414*(input[9]-0.5)/0.5+0.12198899171552587*(input[10]-0.5)/0.5+1.274276101295478*(input[11]-0.5)/0.5+-2.3386152475773985)+-2.964328392158575*sigmoidNeural(-2.552987561844167*(input[0]-0.5)/0.5+2.183762165693438*(input[1]-0.5)/0.5+0.03801086327665823*(input[2]-0.5)/0.5+1.0670825448928203*(input[3]-0.5051319648093842)/0.49486803519061584+0.5080624454691928*(input[4]-0.507201646090535)/0.49279835390946497+-7.357135602768646*(input[5]-0.555278789040046)/0.444721210959954+1.2919543193979224*(input[6]-0.5)/0.5+1.8181938321273996*(input[7]-0.5003364584564741)/0.4996635415435259+-0.6798668259026017*(input[8]-0.5)/0.5+-0.7323646166907146*(input[9]-0.5)/0.5+-0.786354600317353*(input[10]-0.5)/0.5+2.3495478042806743*(input[11]-0.5)/0.5+-6.510363977363434)+-1.7787801730633264)+0.7060625573753985)+0.5102097130242825;
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989766877205(const double input[12]) {
static const double parameters[15] = {3.0363398546861857,-0.11821649843166017,0.3484886322323636,0.024698145796107247,0.030566278278784807,2.257423056134962,-1.0919935877822116,0.1323912260724874,-0.30579865967315306,0.36150797174960764,0.22055416967797367,-0.07288249312114807,0.030950141197013642,-1.605119454818408,1.6365221858986725};
return sigmoidModelOutput<12>(input,parameters);
}
#include "NeuralNet.h"

double RapidNeuralNetModel_2989767001942(const double input[12]) {
return 0.5*(-2.4514765619272234*sigmoidNeural(-2.9278592606807794*sigmoidNeural(-5.359226374618088*(input[0]-0.5)/0.5+2.860380326279286*(input[1]-0.4132172595939209)/0.4132172595939209+0.25033510285583105*(input[2]-0.5)/0.5+2.13179900075153*(input[3]-0.5)/0.5+-0.27424456361616334*(input[4]-0.5)/0.5+-5.47626747135683*(input[5]-0.49473079133933706)/0.49473079133933706+1.6514484401333474*(input[6]-0.5159629248197735)/0.4840370751802266+1.9562866723166952*(input[7]-0.5003364584564741)/0.4996635415435259+0.31341023918699384*(input[8]-0.5)/0.5+-1.7363797945968629*(input[9]-0.5)/0.5+-1.5581173730726825*(input[10]-0.45744680851063824)/0.45744680851063824+2.7451596403222878*(input[11]-0.5)/0.5+-5.188351173527601)+-1.2888469136548564*sigmoidNeural(-2.3810419629569006*(input[0]-0.5)/0.5+-1.6348342711507313*(input[1]-0.4132172595939209)/0.4132172595939209+0.2008391403633207*(input[2]-0.5)/0.5+-0.4712461217460751*(input[3]-0.5)/0.5+-0.4115526650287099*(input[4]-0.5)/0.5+0.30356512290465865*(input[5]-0.49473079133933706)/0.49473079133933706+1.9760467608741317*(input[6]-0.5159629248197735)/0.4840370751802266+0.2504687568309688*(input[7]-0.5003364584564741)/0.4996635415435259+2.6600793545119794*(input[8]-0.5)/0.5+-2.5826626497223453*(input[9]-0.5)/0.5+-0.8936337361616744*(input[10]-0.45744680851063824)/0.45744680851063824+-1.0532765317119588*(input[11]-0.5)/0.5+-3.987478298693439)+-0.8197944268536238*sigmoidNeural(-3.7743167283664714*(input[0]-0.5)/0.5+1.012670580041871*(input[1]-0.4132172595939209)/0.4132172595939209+-0.2040253208605728*(input[2]-0.5)/0.5+-0.6649027034346665*(input[3]-0.5)/0.5+-0.8286958303874619*(input[4]-0.5)/0.5+-1.3791202268292662*(input[5]-0.49473079133933706)/0.49473079133933706+-0.08695826423024364*(input[6]-0.5159629248197735)/0.4840370751802266+-1.8273980661036238*(input[7]-0.5003364584564741)/0.4996635415435259+-0.20035473003022367*(input[8]-0.5)/0.5+1.1602033647698204*(input[9]-0.5)/0.5+0.5723493130175932*(input[10]-0.45744680851063824)/0.45744680851063824+0.9228112455965456*(input[11]-0.5)/0.5+-3.1901317763076014)+-1.7461257390566893)+-2.453902596456655*sigmoidNeural(-2.926363240775468*sigmoidNeural(-5.359226374618088*(input[0]-0.5)/0.5+2.860380326279286*(input[1]-0.4132172595939209)/0.4132172595939209+0.25033510285583105*(input[2]-0.5)/0.5+2.13179900075153*(input[3]-0.5)/0.5+-0.27424456361616334*(input[4]-0.5)/0.5+-5.47626747135683*(input[5]-0.49473079133933706)/0.49473079133933706+1.6514484401333474*(input[6]-0.5159629248197735)/0.4840370751802266+1.9562866723166952*(input[7]-0.5003364584564741)/0.4996635415435259+0.31341023918699384*(input[8]-0.5)/0.5+-1.7363797945968629*(input[9]-0.5)/0.5+-1.5581173730726825*(input[10]-0.45744680851063824)/0.45744680851063824+2.7451596403222878*(input[11]-0.5)/0.5+-5.188351173527601)+-1.2645199929330981*sigmoidNeural(-2.3810419629569006*(input[0]-0.5)/0.5+-1.6348342711507313*(input[1]-0.4132172595939209)/0.4132172595939209+0.2008391403633207*(input[2]-0.5)/0.5+-0.4712461217460751*(input[3]-0.5)/0.5+-0.4115526650287099*(input[4]-0.5)/0.5+0.30356512290465865*(input[5]-0.49473079133933706)/0.49473079133933706+1.9760467608741317*(input[6]-0.5159629248197735)/0.4840370751802266+0.2504687568309688*(input[7]-0.5003364584564741)/0.4996635415435259+2.6600793545119794*(input[8]-0.5)/0.5+-2.5826626497223453*(input[9]-0.5)/0.5+-0.8936337361616744*(input[10]-0.45744680851063824)/0.45744680851063824+-1.0532765317119588*(input[11]-0.5)/0.5+-3.987478298693439)+-0.8421527789925743*sigmoidNeural(-3.7743167283664714*(input[0]-0.5)/0.5+1.012670580041871*(input[1]-0.4132172595939209)/0.4132172595939209+-0.2040253208605728*(input[2]-0.5)/0.5+-0.6649027034346665*(input[3]-0.5)/0.5+-0.8286958303874619*(input[4]-0.5)/0.5+-1.3791202268292662*(input[5]-0.49473079133933706)/0.49473079133933706+-0.08695826423024364*(input[6]-0.5159629248197735)/0.4840370751802266+-1.8273980661036238*(input[7]-0.5003364584564741)/0.4996635415435259+-0.20035473003022367*(input[8]-0.5)/0.5+1.1602033647698204*(input[9]-0.5)/0.5+0.5723493130175932*(input[10]-0.45744680851063824)/0.45744680851063824+0.9228112455965456*(input[11]-0.5)/0.5+-3.1901317763076014)+-1.742530143458263)+-2.452219910251731*sigmoidNeural(-2.92109263203729*sigmoidNeural(-5.359226374618088*(input[0]-0.5)/0.5+2.860380326279286*(input[1]-0.4132172595939209)/0.4132172595939209+0.25033510285583105*(input[2]-0.5)/0.5+2.13179900075153*(input[3]-0.5)/0.5+-0.27424456361616334*(input[4]-0.5)/0.5+-5.47626747135683*(input[5]-0.49473079133933706)/0.49473079133933706+1.6514484401333474*(input[6]-0.5159629248197735)/0.4840370751802266+1.9562866723166952*(input[7]-0.5003364584564741)/0.4996635415435259+0.31341023918699384*(input[8]-0.5)/0.5+-1.7363797945968629*(input[9]-0.5)/0.5+-1.5581173730726825*(input[10]-0.45744680851063824)/0.45744680851063824+2.7451596403222878*(input[11]-0.5)/0.5+-5.188351173527601)+-1.2922070174719738*sigmoidNeural(-2.3810419629569006*(input[0]-0.5)/0.5+-1.6348342711507313*(input[1]-0.4132172595939209)/0.4132172595939209+0.2008391403633207*(input[2]-0.5)/0.5+-0.4712461217460751*(input[3]-0.5)/0.5+-0.4115526650287099*(input[4]-0.5)/0.5+0.30356512290465865*(input[5]-0.49473079133933706)/0.49473079133933706+1.9760467608741317*(input[6]-0.5159629248197735)/0.4840370751802266+0.2504687568309688*(input[7]-0.5003364584564741)/0.4996635415435259+2.6600793545119794*(input[8]-0.5)/0.5+-2.5826626497223453*(input[9]-0.5)/0.5+-0.8936337361616744*(input[10]-0.45744680851063824)/0.45744680851063824+-1.0532765317119588*(input[11]-0.5)/0.5+-3.987478298693439)+-0.8329287523100347*sigmoidNeural(-3.7743167283664714*(input[0]-0.5)/0.5+1.012670580041871*(input[1]-0.4132172595939209)/0.4132172595939209+-0.2040253208605728*(input[2]-0.5)/0.5+-0.6649027034346665*(input[3]-0.5)/0.5+-0.8286958303874619*(input[4]-0.5)/0.5+-1.3791202268292662*(input[5]-0.49473079133933706)/0.49473079133933706+-0.08695826423024364*(input[6]-0.5159629248197735)/0.4840370751802266+-1.8273980661036238*(input[7]-0.5003364584564741)/0.4996635415435259+-0.20035473003022367*(input[8]-0.5)/0.5+1.1602033647698204*(input[9]-0.5)/0.5+0.5723493130175932*(input[10]-0.45744680851063824)/0.45744680851063824+0.9228112455965456*(input[11]-0.5)/0.5+-3.1901317763076014)+-1.741227540116297)+-2.4534711308301964*sigmoidNeural(-2.91739943147193*sigmoidNeural(-5.359226374618088*(input[0]-0.5)/0.5+2.860380326279286*(input[1]-0.4132172595939209)/0.4132172595939209+0.25033510285583105*(input[2]-0.5)/0.5+2.13179900075153*(input[3]-0.5)/0.5+-0.27424456361616334*(input[4]-0.5)/0.5+-5.47626747135683*(input[5]-0.49473079133933706)/0.49473079133933706+1.6514484401333474*(input[6]-0.5159629248197735)/0.4840370751802266+1.9562866723166952*(input[7]-0.5003364584564741)/0.4996635415435259+0.31341023918699384*(input[8]-0.5)/0.5+-1.7363797945968629*(input[9]-0.5)/0.5+-1.5581173730726825*(input[10]-0.45744680851063824)/0.45744680851063824+2.7451596403222878*(input[11]-0.5)/0.5+-5.188351173527601)+-1.2729317261072042*sigmoidNeural(-2.3810419629569006*(input[0]-0.5)/0.5+-1.6348342711507313*(input[1]-0.4132172595939209)/0.4132172595939209+0.2008391403633207*(input[2]-0.5)/0.5+-0.4712461217460751*(input[3]-0.5)/0.5+-0.4115526650287099*(input[4]-0.5)/0.5+0.30356512290465865*(input[5]-0.49473079133933706)/0.49473079133933706+1.9760467608741317*(input[6]-0.5159629248197735)/0.4840370751802266+0.2504687568309688*(input[7]-0.5003364584564741)/0.4996635415435259+2.6600793545119794*(input[8]-0.5)/0.5+-2.5826626497223453*(input[9]-0.5)/0.5+-0.8936337361616744*(input[10]-0.45744680851063824)/0.45744680851063824+-1.0532765317119588*(input[11]-0.5)/0.5+-3.987478298693439)+-0.8665335722576527*sigmoidNeural(-3.7743167283664714*(input[0]-0.5)/0.5+1.012670580041871*(input[1]-0.4132172595939209)/0.4132172595939209+-0.2040253208605728*(input[2]-0.5)/0.5+-0.6649027034346665*(input[3]-0.5)/0.5+-0.8286958303874619*(input[4]-0.5)/0.5+-1.3791202268292662*(input[5]-0.49473079133933706)/0.49473079133933706+-0.08695826423024364*(input[6]-0.5159629248197735)/0.4840370751802266+-1.8273980661036238*(input[7]-0.5003364584564741)/0.4996635415435259+-0.20035473003022367*(input[8]-0.5)/0.5+1.1602033647698204*(input[9]-0.5)/0.5+0.5723493130175932*(input[10]-0.45744680851063824)/0.45744680851063824+0.9228112455965456*(input[11]-0.5)/0.5+-3.1901317763076014)+-1.7316327218356415)+0.5172690975184613)+0.5;
}
#include "./regression/SigmoidModel.h"

double SigmoidModel_2989769602692(const double input[12]) {
static const double parameters[15] = {3.338367598697136,0.5063879717546801,0.26743386962718413,-0.12327031753197719,0.24454564440636084,1.4663334568708095,-1.1941084215979707,-0.1029279788821124,-0.44491180080231396,0.45999087080450307,0.37365116602720033,0.047214663832746244,0.8498438929773728,-2.5276249827831596,2.567533381967519};
return sigmoidModelOutput<12>(input,parameters);
}
#include "./regression/BaggingEnsemble.h"

double ModelBagging_2989763459658(const double input[12]) {
static double (*models[9])(const double*) = {&SigmoidModel_2989763520909,&SigmoidModel_2989763719049,&SigmoidModel_2989763828001,&SigmoidModel_2989763928014,&SigmoidModel_2989764091163,&RapidNeuralNetModel_2989764243348,&SigmoidModel_2989766877205,&RapidNeuralNetModel_2989767001942,&SigmoidModel_2989769602692};
return baggingEnsembleOutput<9,12>(input,models);
}
#include "OutputNormalization.h"

double NormalizationPreprocessing_2989769964470(double input) {
return outputNormalization(input,1.73,36.24);
}
#include "InputNormalization.h"

double* NormalizationPreprocessing_2989770031587(double input[12]) {
static const double imins[12] = {5.0,0.00632,0.0,0.46,38.5,3.561,2.9,1.1296,1.0,187.0,12.6,0.32};
static const double iMaxMinusMin[12] = {45.0,88.96988,100.0,27.279999999999998,48.599999999999994,5.218999999999999,97.1,10.9969,23.0,524.0,9.4,396.58};
return inputNormalization<12>(input,imins,iMaxMinusMin);
}
#include "./regression/ConnectableModel.h"

double ConnectableModel_2989763414261(double input[12]) {
static double (*model)(const double*) = {&ModelBagging_2989763459658};
static double* (*inputProcessingMethods[1])(double*) = {&NormalizationPreprocessing_2989770031587};
static double (*outputProcessingMethods[1])(const double) = {&NormalizationPreprocessing_2989769964470};
static const bool enabledInputs[12] = {true,true,true,true,true,true,true,true,true,true,true,true};
return connectableModelOutput<12,12,1,1>(input,model,enabledInputs,inputProcessingMethods,outputProcessingMethods);
}
int main(int argc, const char** argv) {
    double testInput[1];
    for (double i = 0; i < 10; i = i + 0.25) {
            testInput[0] = i;
            double result = ConnectableModel_2989763414261(testInput);
            cout << setprecision(16) << result << endl;
    }
}